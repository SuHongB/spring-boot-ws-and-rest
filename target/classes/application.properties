mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis.type-aliases-package=com.quantdo.market.entity

spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/market?useUnicode=true&characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = root

#缓存 local:0  redis:1
cache.type = 0

#配置redis
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8  
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1  
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8  
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0  
# 连接超时时间（毫秒）
spring.redis.timeout=0  

## 日志配置
logging.level.root=info
logging.level.com.quantdo.market.service.ws=debug


# C:currency S:symbol  I:interval/instrument T:type L:limit 

#https://www.bitstamp.net/api/
#**********************rest
bitstamp.rest.url = https://www.bitstamp.net/api/v2/
bitstamp.rest.ticker = ticker/{S}/
#**********************ws
bitstamp.ws.url = ws://ws.pusher.com/app/de504dc5763aeef9ff52?protocol=4
bistsamp.ws.channel = {"event": "pusher:subscribe", "data": {"channel": "{X}"}}
bitstamp.ws.live.ticker = live_trades_{S}

#https://docs.pro.coinbase.com/
#**********************rest
coinbase.rest.url = https://api.pro.coinbase.com/
coinbase.rest.product.ticker = products/{S}/ticker
#**********************ws
coinbase.ws.url = wss://ws-feed.pro.coinbase.com
coinbase.ws.channel = {"type": "subscribe","product_ids": [{S}],"channels": ["{X}"]}
coinbase.ws.channel.ticker = ticker


#https://www.kraken.com/en-us/help/api#public-market-data
#************rest
kraken.rest.url =  https://api.kraken.com/0/public/
kraken.rest.asset.pairs = AssetPairs
kraken.rest.ticker = Ticker?pair={S}

#https://testnet.bitmex.com/app/wsAPI#所有指令
#**********************rest
bitmex.rest.url = https://testnet.bitmex.com/api/v1/
bitmex.rest.trade = trade?symbol={S}&count=1&columns=price&reverse=true
bitmex.rest.instrument = instrument/compositeIndex?symbol={S}&count=4&reverse=true
#**********************ws
bitmex.ws.url = wss://www.bitmex.com/realtime
bitmex.ws.channel = {"op": "subscribe", "args": ["{X}"]}
bitmex.ws.channel.ticker = instrument:{S}























